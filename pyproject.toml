[build-system]
requires = ["setuptools", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fluster-conformance"
version = "0.2.0.0" # TODO: Ensure that version 0.2.0 is marked as the final version in the CI release workflow only when we are certain about deploying a new release. This prevents creating an irreversible history in PyPI, which would block re-uploading the same version.
authors = [
    {name = "Pablo Marcos Oltra"},
    {name = "Andoni Morales Alastruey", email="amorales@fluendo.com"},
]
maintainers = [
    {name = "Michalis Dimopoulos", email="mdimopoulos@fluendo.com"},
    {name = "Ruben Gonzalez", email="rgonzalez@fluendo.com"},
]
description = "Testing framework for decoder conformance"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]

[tool.setuptools.package-data]
"additional_documents" = ["REPORT.md"]

[project.urls]
"Github repository" = "https://github.com/fluendo/fluster/"

[tool.setuptools]
packages = ["fluster", "fluster.decoders"]

[tool.setuptools.data-files]
"share/fluster/test_suites/aac" = [
    "test_suites/aac/MPEG2_AAC-ADTS.json",
    "test_suites/aac/MPEG2_AAC-ADIF.json",
    "test_suites/aac/MPEG4_AAC-ADIF.json",
    "test_suites/aac/MPEG4_AAC-ADTS.json",
    "test_suites/aac/MPEG4_AAC-MP4.json"
]
"share/fluster/test_suites/av1" = [
    "test_suites/av1/AV1-TEST-VECTORS.json",
    "test_suites/av1/AV1_ARGON_VECTORS.json",
    "test_suites/av1/CHROMIUM-10bit-AV1-TEST-VECTORS.json",
    "test_suites/av1/CHROMIUM-8bit-AV1-TEST-VECTORS.json"
]
"share/fluster/test_suites/h264" = [
    "test_suites/h264/JVT-AVC_V1.json",
    "test_suites/h264/JVT-FR-EXT.json",
    "test_suites/h264/JVT-MVC.json",
    "test_suites/h264/JVT-Professional_profiles.json",
    "test_suites/h264/JVT-SVC.json"
]
"share/fluster/test_suites/h265" = [
    "test_suites/h265/JCT-VC-3D-HEVC.json",
    "test_suites/h265/JCT-VC-HEVC_V1.json",
    "test_suites/h265/JCT-VC-MV-HEVC.json",
    "test_suites/h265/JCT-VC-RExt.json",
    "test_suites/h265/JCT-VC-SCC.json",
    "test_suites/h265/JCT-VC-SHVC.json"
]
"share/fluster/test_suites/h266" = [
    "test_suites/h266/JVET-VVC_draft6.json",
]
"share/fluster/test_suites/vp8" = [
    "test_suites/vp8/VP8-TEST-VECTORS.json",
]
"share/fluster/test_suites/vp9" = [
    "test_suites/vp9/VP9-TEST-VECTORS-HIGH.json",
    "test_suites/vp9/VP9-TEST-VECTORS.json"
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy"
]

# https://docs.astral.sh/ruff/configuration/#configuring-ruff
[tool.ruff]
line-length = 120
target-version = "py37"
indent-width = 4

[tool.ruff.lint]
# Flake8: E, F, W, N, YTT, "ASYNC", "A", "COM", "C4", "ICN", "PIE", "Q", "SLF"
# isort: I
# Pylint: PLE, PLW
# Flake8 candidates for the future: "RSE", "PTH", "EM", "RET"
select = ["E", "F", "W", "N", "YTT", "ASYNC", "A", "COM", "C4", "ICN", "PIE", "Q", "SLF", "I", "PLE", "PLW"]
ignore = ["COM812"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[project.scripts]
fluster = "fluster.main:fluster_main"
